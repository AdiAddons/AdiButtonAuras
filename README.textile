h1. AdiButtonAuras

Display auras, and more, on action buttons.

AdiButtonAuras is a rewrite of Inline Aura, but with different design decisions based on my experience on the latter.

AdiButtonAuras uses a set of rules that apply to one or more spells. Each rule can track an aura on one or more unit and changes the display of the spell accordingly.

h2. Options

h3. Global options

* do not flash actions on cooldown,
* change "good" and "bad" border colors,
* tweak countdown text display.

h3. Spell/item options

* disable the spell,
* "promote to flash": replace any border with the flashing animation,
* inverted highlight: highlight the spell when it is missing,
* select which rules should apply.

h2. Supported classes and specializations

Most of the simple buffs are supported through the library "LibPlayerSpell-1.0":https://github.com/Adirelle/LibPlayerSpells-1.0.

* !http://wow.zamimg.com/images/wow/icons/small/class_druid.jpg! Druid:
** Balance: 5.4
** Feral Combat: 5.4
** Guardian: 5.4 untested
** Restoration: 5.4
* !http://wow.zamimg.com/images/wow/icons/small/class_hunter.jpg! Hunter
** Beast Master: 5.4 untested
** Marksmanship: 5.4
** Survival: 5.4
* !http://wow.zamimg.com/images/wow/icons/small/class_priest.jpg! Priest
** Discipline: 5.4
** Holy: 5.4 untested
** Shadow: 5.4 untested
* !http://wow.zamimg.com/images/wow/icons/small/class_monk.jpg! Monk
** Brewmaster: 5.4
** Mistweaver: 5.4
** Windwalker: 5.4
* !http://wow.zamimg.com/images/wow/icons/small/class_warlock.jpg! Warlock
** Affliction: 5.4 untested
** Demonology: 5.4 untested
** Destruction: 5.4

AdiButtonAuras also supports differents kinds of spells using libraries, regardless of class:
* crowd-control spells using "DRData-1.0":http://www.curse.com/addons/wow/drdata-1-0,
* dispel spells using "LibDispellabe-1.0":http://www.curse.com/addons/wow/libdispellable-1-0,
* trinket, enchantment and item buffs using "LibItemBuffs-1.0":https://github.com/Adirelle/LibItemBuffs-1.0.

Finally, there is a default rule for *items* not supported by LibItemBuffs-1.0.

h2. Design decisions

h3. Separate button overlays

A separate button overlay is created for each button, with border texture, texts and glowing animation.

*Pro*: avoid tainting the action buttons, thus causing ADDON_BLOCKED errors. There is also no need to hook various methods to re-apply the state after the stock UI modified them.

*Con*: this does not support skinning (Masque) or custom third-party action buttons (ElvUI). However, AdiButtonAuras fully support Dominos and Bartender4, and should support any addon using the stock action buttons (like Dominos) or LibActionButton-1.0 (like Bartender4).

h3. Hard-coded rules

The rules are hard-coded using a pretty simple "Domain Specific Language":https://en.wikipedia.org/wiki/Domain_specific_language built on top of Lua.

Each rules specifies the spells to modify, the units and events to watch and one or more handlers. Several rules about the same spell are merged together, or thrown if the character doesn't know the spell.

Each time one of the event is triggered for one of the unit, the handlers are called to update the state of the associated button.

A set of convenient functions are provided to easily configure most spells. If a more specific task is needed, Lua can be used (see interrupt spells).

*Pro*: far more powerful than the Inline Aura engine. This allows to show data from one unit merged with the stat of another one, if need be.

*Con*: there is no way to configure this using a GUI.

h3. No spell auto-discovery

AdiButtonAuras only shows data for existing rules. It does not try to guess what to show.

*Pro*: avoid showing wrong data.

*Con*: all spells for all class should be listed.

h3. Using spell ids instead of spell names

AdiButtonAuras uses the spell numerical identifiers, instead of its name, to search for the applicable rules.

*Pro*: avoid showing information on a wrong spell that as the same name as the intended one.

*Con*: spells ids are sometimes different depending on shapeshift forms, glyphs or talents. All of them should be listed.

h2. Embedded BugGrabber

"BugGrabber":http://www.curse.com/addons/wow/bug-grabber is shipped with AdiButtonAuras. You can install "BugSack":http://www.curse.com/addons/wow/bugsack to have a more user-friendly display of errors.

h2. License

AdiButtonAuras is licensed using the GPL v3.
