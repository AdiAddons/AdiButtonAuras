name: CI

on:
  - push
  - pull_request

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
      - name: Setup APT cache
        uses: actions/cache@v2.1.2
        with:
          path: /var/cache/apt/**
          key: ${{ runner.os }}-apt
      - name: Install Lua and LuaRocks
        run: |
          # apt-get commands
          echo '::group::apt-get update'
          sudo apt-get -q update
          echo '::endGroup::'
          echo '::group::apt-get install'
          sudo apt-get -qy install lua5.1 luarocks liblua5.1-bitop0
          echo '::endGroup::'
      - name: Prepare Lua paths
        run: |
          luarocks path --lr-bin >> $GITHUB_PATH
          luarocks path | sed -e 's/^export //' -e "s/'//g" >> $GITHUB_ENV
      - name: Setup LuaRocks cache
        id: cache-luarocks
        uses: actions/cache@v2.1.2
        with:
          path: ~/.luarocks
          key: ${{ runner.os }}-luarocks
      - name: Install testing libraries
        if: steps.cache-luarocks.outputs.cache-hit != 'true'
        run: |
          # luarocks install
          echo '::group::luacheck'
          luarocks install --local luacheck
          echo '::endGroup::'
          echo '::group::mockagne'
          luarocks install --local mockagne 1.0
          echo '::endGroup::'
          echo '::group::luaunit'
          luarocks install --local luaunit 2.1
          echo '::endGroup::'
      - name: Lint
        uses: nebularg/actions-luacheck@v1
        with:
          annotate: error
      - name: Test
        run: lua tests/Items.lua
      - name: Write libraries to .toc
        run: lua .release/libreplace.lua
      - name: Setup packager arguments
        id: packager-args
        if: github.base_ref || (github.ref != 'refs/heads/master' && !startsWith(github.ref, 'refs/tags/'))
        run: echo '::set-output name=args::-d'
      - name: Package and deploy
        uses: BigWigsMods/packager@v1.0.2
        with:
          args: ${{ steps.packager-args.outputs.args }}
        env:
          CF_API_KEY: ${{ secrets.CF_API_KEY }}
          GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload packages to github
        uses: actions/upload-artifact@v2
        with:
          name: packages
          path: .release/AdiButtonAuras*.zip
